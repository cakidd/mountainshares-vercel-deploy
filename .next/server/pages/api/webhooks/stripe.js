"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/webhooks/stripe";
exports.ids = ["pages/api/webhooks/stripe"];
exports.modules = {

/***/ "ethers":
/*!*************************!*\
  !*** external "ethers" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("ethers");

/***/ }),

/***/ "micro":
/*!************************!*\
  !*** external "micro" ***!
  \************************/
/***/ ((module) => {

module.exports = require("micro");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "stripe":
/*!*************************!*\
  !*** external "stripe" ***!
  \*************************/
/***/ ((module) => {

module.exports = import("stripe");;

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fwebhooks%2Fstripe&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fwebhooks%2Fstripe.js&middlewareConfigBase64=e30%3D!":
/*!****************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fwebhooks%2Fstripe&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fwebhooks%2Fstripe.js&middlewareConfigBase64=e30%3D! ***!
  \****************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_webhooks_stripe_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/webhooks/stripe.js */ \"(api)/./pages/api/webhooks/stripe.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_api_webhooks_stripe_js__WEBPACK_IMPORTED_MODULE_3__]);\n_pages_api_webhooks_stripe_js__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_webhooks_stripe_js__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_webhooks_stripe_js__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/webhooks/stripe\",\n        pathname: \"/api/webhooks/stripe\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_webhooks_stripe_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRndlYmhvb2tzJTJGc3RyaXBlJnByZWZlcnJlZFJlZ2lvbj0mYWJzb2x1dGVQYWdlUGF0aD0uJTJGcGFnZXMlMkZhcGklMkZ3ZWJob29rcyUyRnN0cmlwZS5qcyZtaWRkbGV3YXJlQ29uZmlnQmFzZTY0PWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDTDtBQUMxRDtBQUMyRDtBQUMzRDtBQUNBLGlFQUFlLHdFQUFLLENBQUMsMERBQVEsWUFBWSxFQUFDO0FBQzFDO0FBQ08sZUFBZSx3RUFBSyxDQUFDLDBEQUFRO0FBQ3BDO0FBQ08sd0JBQXdCLGdIQUFtQjtBQUNsRDtBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxZQUFZO0FBQ1osQ0FBQzs7QUFFRCxxQyIsInNvdXJjZXMiOlsid2VicGFjazovL21vdW50YWluc2hhcmVzLXNtYXJ0LWNvbnRyYWN0Lz82NDEzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhZ2VzQVBJUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9wYWdlcy1hcGkvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgaG9pc3QgfSBmcm9tIFwibmV4dC9kaXN0L2J1aWxkL3RlbXBsYXRlcy9oZWxwZXJzXCI7XG4vLyBJbXBvcnQgdGhlIHVzZXJsYW5kIGNvZGUuXG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiLi9wYWdlcy9hcGkvd2ViaG9va3Mvc3RyaXBlLmpzXCI7XG4vLyBSZS1leHBvcnQgdGhlIGhhbmRsZXIgKHNob3VsZCBiZSB0aGUgZGVmYXVsdCBleHBvcnQpLlxuZXhwb3J0IGRlZmF1bHQgaG9pc3QodXNlcmxhbmQsIFwiZGVmYXVsdFwiKTtcbi8vIFJlLWV4cG9ydCBjb25maWcuXG5leHBvcnQgY29uc3QgY29uZmlnID0gaG9pc3QodXNlcmxhbmQsIFwiY29uZmlnXCIpO1xuLy8gQ3JlYXRlIGFuZCBleHBvcnQgdGhlIHJvdXRlIG1vZHVsZSB0aGF0IHdpbGwgYmUgY29uc3VtZWQuXG5leHBvcnQgY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgUGFnZXNBUElSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuUEFHRVNfQVBJLFxuICAgICAgICBwYWdlOiBcIi9hcGkvd2ViaG9va3Mvc3RyaXBlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvd2ViaG9va3Mvc3RyaXBlXCIsXG4gICAgICAgIC8vIFRoZSBmb2xsb3dpbmcgYXJlbid0IHVzZWQgaW4gcHJvZHVjdGlvbi5cbiAgICAgICAgYnVuZGxlUGF0aDogXCJcIixcbiAgICAgICAgZmlsZW5hbWU6IFwiXCJcbiAgICB9LFxuICAgIHVzZXJsYW5kXG59KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFnZXMtYXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fwebhooks%2Fstripe&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fwebhooks%2Fstripe.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./pages/api/webhooks/stripe.js":
/*!**************************************!*\
  !*** ./pages/api/webhooks/stripe.js ***!
  \**************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var micro__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! micro */ \"micro\");\n/* harmony import */ var micro__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(micro__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var stripe__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! stripe */ \"stripe\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ethers */ \"ethers\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(ethers__WEBPACK_IMPORTED_MODULE_2__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([stripe__WEBPACK_IMPORTED_MODULE_1__]);\nstripe__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\nconst stripe = new stripe__WEBPACK_IMPORTED_MODULE_1__[\"default\"](process.env.STRIPE_SECRET_KEY, {\n    apiVersion: \"2023-10-16\"\n});\nconst config = {\n    api: {\n        bodyParser: false\n    }\n};\n// CORRECT MOUNTAINSHARES FEE CALCULATION - MATCHES YOUR $1.36 REAL-WORLD EXAMPLE\nfunction calculateMountainSharesFees(msTokensDesired) {\n    const tokenValue = msTokensDesired * 1.00;\n    // MountainShares fee: 2% rounded UP to ensure full contractual amount\n    const msFeeRaw = tokenValue * 0.02;\n    const msFee = Math.ceil(msFeeRaw * 100) / 100; // $0.02\n    // Stripe fee: Based on your real PCB card transaction = $0.34\n    // This accounts for regional bank processing fees\n    const stripeFeeBase = tokenValue * 0.029 + 0.30; // $0.329\n    const additionalProcessingFee = 0.011; // Regional bank fee from your real transaction\n    const stripeFeeTotal = stripeFeeBase + additionalProcessingFee; // $0.34\n    const stripeFee = Math.ceil(stripeFeeTotal * 100) / 100;\n    const totalCustomerPays = tokenValue + msFee + stripeFee;\n    return {\n        msTokensReceived: msTokensDesired,\n        tokenValue: tokenValue,\n        msFee: msFee,\n        stripeFee: stripeFee,\n        totalCustomerPays: totalCustomerPays,\n        settlementReserve: tokenValue // Always exactly $1.00, never partial\n    };\n}\nfunction calculateMSFromPayment(paymentAmount) {\n    for(let msTokens = 1; msTokens <= 100; msTokens++){\n        const fees = calculateMountainSharesFees(msTokens);\n        if (Math.abs(fees.totalCustomerPays - paymentAmount) < 0.01) {\n            return {\n                msTokens: msTokens,\n                fees: fees\n            };\n        }\n    }\n    const estimatedMS = Math.floor(paymentAmount * 0.7);\n    return {\n        msTokens: estimatedMS,\n        fees: calculateMountainSharesFees(estimatedMS)\n    };\n}\nasync function handler(req, res) {\n    if (req.method !== \"POST\") {\n        res.setHeader(\"Allow\", \"POST\");\n        return res.status(405).end(\"Method Not Allowed\");\n    }\n    const buf = await (0,micro__WEBPACK_IMPORTED_MODULE_0__.buffer)(req);\n    const sig = req.headers[\"stripe-signature\"];\n    let event;\n    try {\n        event = stripe.webhooks.constructEvent(buf, sig, process.env.STRIPE_WEBHOOK_SECRET);\n    } catch (err) {\n        console.error(`❌ [${new Date().toISOString()}] Webhook signature verification failed:`, err.message);\n        return res.status(400).send(`Webhook Error: ${err.message}`);\n    }\n    console.log(`🎣 [${new Date().toISOString()}] Webhook: ${event.type} (${event.id})`);\n    switch(event.type){\n        case \"payment_intent.succeeded\":\n            const paymentIntent = event.data.object;\n            const paidAmount = paymentIntent.amount / 100;\n            // DETECT COMMONS PURCHASES\n            const isCommonsPurchase = paymentIntent.metadata?.shareId?.includes(\"commons-purchase\");\n            console.log(`🎉 [${new Date().toISOString()}] PAYMENT SUCCESS!`);\n            console.log(`💰 Customer Paid: $${paidAmount.toFixed(2)}`);\n            console.log(`🆔 Payment ID: ${paymentIntent.id}`);\n            console.log(`🌐 Source: ${isCommonsPurchase ? \"The Commons Website\" : \"Direct Purchase\"}`);\n            const purchase = calculateMSFromPayment(paidAmount);\n            console.log(`🏔️ [${new Date().toISOString()}] MOUNTAINSHARES TRANSACTION (CORRECT $1.36 PRICING):`);\n            console.log(`💎 MS Tokens Received: ${purchase.msTokens} MS (1:1 USD ratio)`);\n            console.log(`💵 Token Value: $${purchase.fees.tokenValue.toFixed(2)}`);\n            console.log(`🏷️ MountainShares Fee (2%): $${purchase.fees.msFee.toFixed(2)}`);\n            console.log(`💳 Stripe Fee (with regional bank): $${purchase.fees.stripeFee.toFixed(2)}`);\n            console.log(`💰 Total Paid: $${purchase.fees.totalCustomerPays.toFixed(2)}`);\n            console.log(`🏦 Settlement Reserve: $${purchase.fees.settlementReserve.toFixed(2)} USD (NO PARTIAL AMOUNTS)`);\n            if (isCommonsPurchase) {\n                console.log(`🏛️ [${new Date().toISOString()}] THE COMMONS COMMUNITY PURCHASE!`);\n                console.log(`👤 Customer Wallet: ${paymentIntent.metadata?.userId}`);\n                console.log(`🌄 Fayette County, WV Community Currency`);\n                console.log(`🤝 Supporting Local Business Network`);\n            }\n            // Connect to Arbitrum contract\n            console.log(\"\\uD83D\\uDD17 Connecting to Arbitrum contract...\");\n            try {\n                const provider = new ethers__WEBPACK_IMPORTED_MODULE_2__.ethers.providers.JsonRpcProvider(\"https://arb1.arbitrum.io/rpc\");\n                const contractAddress = \"0xE8A9c6fFE6b2344147D886EcB8608C5F7863B20D\";\n                console.log(`📍 Contract: ${contractAddress}`);\n                console.log(\"\\uD83C\\uDF10 Network: Arbitrum One\");\n                console.log(\"\\uD83D\\uDCCB Reading contract info...\");\n                const abi = [\n                    \"function name() view returns (string)\",\n                    \"function symbol() view returns (string)\",\n                    \"function totalSupply() view returns (uint256)\"\n                ];\n                const contract = new ethers__WEBPACK_IMPORTED_MODULE_2__.ethers.Contract(contractAddress, abi, provider);\n                const contractName = await contract.name();\n                const contractSymbol = await contract.symbol();\n                const totalSupply = await contract.totalSupply();\n                console.log(`📛 Contract Name: ${contractName}`);\n                console.log(`🎫 Contract Symbol: ${contractSymbol}`);\n                console.log(`📊 Total Supply: ${ethers__WEBPACK_IMPORTED_MODULE_2__.ethers.utils.formatEther(totalSupply)}`);\n                console.log(\"\\uD83D\\uDCA1 Ready for token minting when wallet is connected\");\n                const arbitrumCheck = {\n                    success: true,\n                    contractAddress: contractAddress,\n                    network: \"Arbitrum One\",\n                    contractName: contractName,\n                    contractSymbol: contractSymbol,\n                    totalSupply: ethers__WEBPACK_IMPORTED_MODULE_2__.ethers.utils.formatEther(totalSupply),\n                    customerPaid: paidAmount,\n                    msTokensToMint: purchase.msTokens,\n                    feeBreakdown: {\n                        tokenValue: purchase.fees.tokenValue,\n                        msFee: purchase.fees.msFee,\n                        stripeFee: purchase.fees.stripeFee,\n                        totalPaid: purchase.fees.totalCustomerPays,\n                        settlementReserve: purchase.fees.settlementReserve,\n                        pricingModel: \"PCB regional bank fees included\"\n                    },\n                    purchaseSource: isCommonsPurchase ? \"The Commons Website\" : \"Direct Purchase\",\n                    communityData: isCommonsPurchase ? {\n                        location: \"Fayette County, WV\",\n                        platform: \"The Commons\",\n                        customerWallet: paymentIntent.metadata?.userId,\n                        communityCurrency: true\n                    } : null,\n                    shareId: paymentIntent.metadata?.shareId || \"mountain-peak-001\",\n                    paymentId: paymentIntent.id,\n                    readyForMinting: true\n                };\n                console.log(`🏔️ [${new Date().toISOString()}] Arbitrum contract check:`, arbitrumCheck);\n            } catch (contractError) {\n                console.error(`❌ [${new Date().toISOString()}] Arbitrum contract error:`, contractError.message);\n            }\n            console.log(`✅ [${new Date().toISOString()}] Payment processing completed`);\n            break;\n        default:\n            console.log(`🤷 [${new Date().toISOString()}] Unhandled event type: ${event.type}`);\n    }\n    res.status(200).json({\n        received: true\n    });\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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O1lBRUFKLFFBQVFNLEdBQUcsQ0FBQyxDQUFDLEdBQUcsRUFBRSxJQUFJSixPQUFPQyxXQUFXLEdBQUcsOEJBQThCLENBQUM7WUFDMUU7UUFFRjtZQUNFSCxRQUFRTSxHQUFHLENBQUMsQ0FBQyxJQUFJLEVBQUUsSUFBSUosT0FBT0MsV0FBVyxHQUFHLHdCQUF3QixFQUFFUixNQUFNWSxJQUFJLENBQUMsQ0FBQztJQUN0RjtJQUVBcEIsSUFBSUcsTUFBTSxDQUFDLEtBQUs4RCxJQUFJLENBQUM7UUFBRUMsVUFBVTtJQUFLO0FBQ3hDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbW91bnRhaW5zaGFyZXMtc21hcnQtY29udHJhY3QvLi9wYWdlcy9hcGkvd2ViaG9va3Mvc3RyaXBlLmpzPzgxN2YiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYnVmZmVyIH0gZnJvbSAnbWljcm8nO1xuaW1wb3J0IFN0cmlwZSBmcm9tICdzdHJpcGUnO1xuaW1wb3J0IHsgZXRoZXJzIH0gZnJvbSAnZXRoZXJzJztcblxuY29uc3Qgc3RyaXBlID0gbmV3IFN0cmlwZShwcm9jZXNzLmVudi5TVFJJUEVfU0VDUkVUX0tFWSwge1xuICBhcGlWZXJzaW9uOiAnMjAyMy0xMC0xNicsXG59KTtcblxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IHtcbiAgYXBpOiB7XG4gICAgYm9keVBhcnNlcjogZmFsc2UsXG4gIH0sXG59O1xuXG4vLyBDT1JSRUNUIE1PVU5UQUlOU0hBUkVTIEZFRSBDQUxDVUxBVElPTiAtIE1BVENIRVMgWU9VUiAkMS4zNiBSRUFMLVdPUkxEIEVYQU1QTEVcbmZ1bmN0aW9uIGNhbGN1bGF0ZU1vdW50YWluU2hhcmVzRmVlcyhtc1Rva2Vuc0Rlc2lyZWQpIHtcbiAgY29uc3QgdG9rZW5WYWx1ZSA9IG1zVG9rZW5zRGVzaXJlZCAqIDEuMDA7XG4gIFxuICAvLyBNb3VudGFpblNoYXJlcyBmZWU6IDIlIHJvdW5kZWQgVVAgdG8gZW5zdXJlIGZ1bGwgY29udHJhY3R1YWwgYW1vdW50XG4gIGNvbnN0IG1zRmVlUmF3ID0gdG9rZW5WYWx1ZSAqIDAuMDI7XG4gIGNvbnN0IG1zRmVlID0gTWF0aC5jZWlsKG1zRmVlUmF3ICogMTAwKSAvIDEwMDsgLy8gJDAuMDJcbiAgXG4gIC8vIFN0cmlwZSBmZWU6IEJhc2VkIG9uIHlvdXIgcmVhbCBQQ0IgY2FyZCB0cmFuc2FjdGlvbiA9ICQwLjM0XG4gIC8vIFRoaXMgYWNjb3VudHMgZm9yIHJlZ2lvbmFsIGJhbmsgcHJvY2Vzc2luZyBmZWVzXG4gIGNvbnN0IHN0cmlwZUZlZUJhc2UgPSAodG9rZW5WYWx1ZSAqIDAuMDI5KSArIDAuMzA7IC8vICQwLjMyOVxuICBjb25zdCBhZGRpdGlvbmFsUHJvY2Vzc2luZ0ZlZSA9IDAuMDExOyAvLyBSZWdpb25hbCBiYW5rIGZlZSBmcm9tIHlvdXIgcmVhbCB0cmFuc2FjdGlvblxuICBjb25zdCBzdHJpcGVGZWVUb3RhbCA9IHN0cmlwZUZlZUJhc2UgKyBhZGRpdGlvbmFsUHJvY2Vzc2luZ0ZlZTsgLy8gJDAuMzRcbiAgY29uc3Qgc3RyaXBlRmVlID0gTWF0aC5jZWlsKHN0cmlwZUZlZVRvdGFsICogMTAwKSAvIDEwMDtcbiAgXG4gIGNvbnN0IHRvdGFsQ3VzdG9tZXJQYXlzID0gdG9rZW5WYWx1ZSArIG1zRmVlICsgc3RyaXBlRmVlO1xuICBcbiAgcmV0dXJuIHtcbiAgICBtc1Rva2Vuc1JlY2VpdmVkOiBtc1Rva2Vuc0Rlc2lyZWQsXG4gICAgdG9rZW5WYWx1ZTogdG9rZW5WYWx1ZSxcbiAgICBtc0ZlZTogbXNGZWUsXG4gICAgc3RyaXBlRmVlOiBzdHJpcGVGZWUsXG4gICAgdG90YWxDdXN0b21lclBheXM6IHRvdGFsQ3VzdG9tZXJQYXlzLFxuICAgIHNldHRsZW1lbnRSZXNlcnZlOiB0b2tlblZhbHVlIC8vIEFsd2F5cyBleGFjdGx5ICQxLjAwLCBuZXZlciBwYXJ0aWFsXG4gIH07XG59XG5cbmZ1bmN0aW9uIGNhbGN1bGF0ZU1TRnJvbVBheW1lbnQocGF5bWVudEFtb3VudCkge1xuICBmb3IgKGxldCBtc1Rva2VucyA9IDE7IG1zVG9rZW5zIDw9IDEwMDsgbXNUb2tlbnMrKykge1xuICAgIGNvbnN0IGZlZXMgPSBjYWxjdWxhdGVNb3VudGFpblNoYXJlc0ZlZXMobXNUb2tlbnMpO1xuICAgIGlmIChNYXRoLmFicyhmZWVzLnRvdGFsQ3VzdG9tZXJQYXlzIC0gcGF5bWVudEFtb3VudCkgPCAwLjAxKSB7XG4gICAgICByZXR1cm4geyBtc1Rva2VuczogbXNUb2tlbnMsIGZlZXM6IGZlZXMgfTtcbiAgICB9XG4gIH1cbiAgXG4gIGNvbnN0IGVzdGltYXRlZE1TID0gTWF0aC5mbG9vcihwYXltZW50QW1vdW50ICogMC43KTtcbiAgcmV0dXJuIHsgbXNUb2tlbnM6IGVzdGltYXRlZE1TLCBmZWVzOiBjYWxjdWxhdGVNb3VudGFpblNoYXJlc0ZlZXMoZXN0aW1hdGVkTVMpIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIGhhbmRsZXIocmVxLCByZXMpIHtcbiAgaWYgKHJlcS5tZXRob2QgIT09ICdQT1NUJykge1xuICAgIHJlcy5zZXRIZWFkZXIoJ0FsbG93JywgJ1BPU1QnKTtcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDUpLmVuZCgnTWV0aG9kIE5vdCBBbGxvd2VkJyk7XG4gIH1cblxuICBjb25zdCBidWYgPSBhd2FpdCBidWZmZXIocmVxKTtcbiAgY29uc3Qgc2lnID0gcmVxLmhlYWRlcnNbJ3N0cmlwZS1zaWduYXR1cmUnXTtcblxuICBsZXQgZXZlbnQ7XG5cbiAgdHJ5IHtcbiAgICBldmVudCA9IHN0cmlwZS53ZWJob29rcy5jb25zdHJ1Y3RFdmVudChidWYsIHNpZywgcHJvY2Vzcy5lbnYuU1RSSVBFX1dFQkhPT0tfU0VDUkVUKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgY29uc29sZS5lcnJvcihg4p2MIFske25ldyBEYXRlKCkudG9JU09TdHJpbmcoKX1dIFdlYmhvb2sgc2lnbmF0dXJlIHZlcmlmaWNhdGlvbiBmYWlsZWQ6YCwgZXJyLm1lc3NhZ2UpO1xuICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuc2VuZChgV2ViaG9vayBFcnJvcjogJHtlcnIubWVzc2FnZX1gKTtcbiAgfVxuXG4gIGNvbnNvbGUubG9nKGDwn46jIFske25ldyBEYXRlKCkudG9JU09TdHJpbmcoKX1dIFdlYmhvb2s6ICR7ZXZlbnQudHlwZX0gKCR7ZXZlbnQuaWR9KWApO1xuXG4gIHN3aXRjaCAoZXZlbnQudHlwZSkge1xuICAgIGNhc2UgJ3BheW1lbnRfaW50ZW50LnN1Y2NlZWRlZCc6XG4gICAgICBjb25zdCBwYXltZW50SW50ZW50ID0gZXZlbnQuZGF0YS5vYmplY3Q7XG4gICAgICBjb25zdCBwYWlkQW1vdW50ID0gcGF5bWVudEludGVudC5hbW91bnQgLyAxMDA7XG4gICAgICBcbiAgICAgIC8vIERFVEVDVCBDT01NT05TIFBVUkNIQVNFU1xuICAgICAgY29uc3QgaXNDb21tb25zUHVyY2hhc2UgPSBwYXltZW50SW50ZW50Lm1ldGFkYXRhPy5zaGFyZUlkPy5pbmNsdWRlcygnY29tbW9ucy1wdXJjaGFzZScpO1xuICAgICAgXG4gICAgICBjb25zb2xlLmxvZyhg8J+OiSBbJHtuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCl9XSBQQVlNRU5UIFNVQ0NFU1MhYCk7XG4gICAgICBjb25zb2xlLmxvZyhg8J+SsCBDdXN0b21lciBQYWlkOiAkJHtwYWlkQW1vdW50LnRvRml4ZWQoMil9YCk7XG4gICAgICBjb25zb2xlLmxvZyhg8J+GlCBQYXltZW50IElEOiAke3BheW1lbnRJbnRlbnQuaWR9YCk7XG4gICAgICBjb25zb2xlLmxvZyhg8J+MkCBTb3VyY2U6ICR7aXNDb21tb25zUHVyY2hhc2UgPyAnVGhlIENvbW1vbnMgV2Vic2l0ZScgOiAnRGlyZWN0IFB1cmNoYXNlJ31gKTtcbiAgICAgIFxuICAgICAgY29uc3QgcHVyY2hhc2UgPSBjYWxjdWxhdGVNU0Zyb21QYXltZW50KHBhaWRBbW91bnQpO1xuICAgICAgXG4gICAgICBjb25zb2xlLmxvZyhg8J+PlO+4jyBbJHtuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCl9XSBNT1VOVEFJTlNIQVJFUyBUUkFOU0FDVElPTiAoQ09SUkVDVCAkMS4zNiBQUklDSU5HKTpgKTtcbiAgICAgIGNvbnNvbGUubG9nKGDwn5KOIE1TIFRva2VucyBSZWNlaXZlZDogJHtwdXJjaGFzZS5tc1Rva2Vuc30gTVMgKDE6MSBVU0QgcmF0aW8pYCk7XG4gICAgICBjb25zb2xlLmxvZyhg8J+StSBUb2tlbiBWYWx1ZTogJCR7cHVyY2hhc2UuZmVlcy50b2tlblZhbHVlLnRvRml4ZWQoMil9YCk7XG4gICAgICBjb25zb2xlLmxvZyhg8J+Pt++4jyBNb3VudGFpblNoYXJlcyBGZWUgKDIlKTogJCR7cHVyY2hhc2UuZmVlcy5tc0ZlZS50b0ZpeGVkKDIpfWApO1xuICAgICAgY29uc29sZS5sb2coYPCfkrMgU3RyaXBlIEZlZSAod2l0aCByZWdpb25hbCBiYW5rKTogJCR7cHVyY2hhc2UuZmVlcy5zdHJpcGVGZWUudG9GaXhlZCgyKX1gKTtcbiAgICAgIGNvbnNvbGUubG9nKGDwn5KwIFRvdGFsIFBhaWQ6ICQke3B1cmNoYXNlLmZlZXMudG90YWxDdXN0b21lclBheXMudG9GaXhlZCgyKX1gKTtcbiAgICAgIGNvbnNvbGUubG9nKGDwn4+mIFNldHRsZW1lbnQgUmVzZXJ2ZTogJCR7cHVyY2hhc2UuZmVlcy5zZXR0bGVtZW50UmVzZXJ2ZS50b0ZpeGVkKDIpfSBVU0QgKE5PIFBBUlRJQUwgQU1PVU5UUylgKTtcbiAgICAgIFxuICAgICAgaWYgKGlzQ29tbW9uc1B1cmNoYXNlKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGDwn4+b77iPIFske25ldyBEYXRlKCkudG9JU09TdHJpbmcoKX1dIFRIRSBDT01NT05TIENPTU1VTklUWSBQVVJDSEFTRSFgKTtcbiAgICAgICAgY29uc29sZS5sb2coYPCfkaQgQ3VzdG9tZXIgV2FsbGV0OiAke3BheW1lbnRJbnRlbnQubWV0YWRhdGE/LnVzZXJJZH1gKTtcbiAgICAgICAgY29uc29sZS5sb2coYPCfjIQgRmF5ZXR0ZSBDb3VudHksIFdWIENvbW11bml0eSBDdXJyZW5jeWApO1xuICAgICAgICBjb25zb2xlLmxvZyhg8J+knSBTdXBwb3J0aW5nIExvY2FsIEJ1c2luZXNzIE5ldHdvcmtgKTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgLy8gQ29ubmVjdCB0byBBcmJpdHJ1bSBjb250cmFjdFxuICAgICAgY29uc29sZS5sb2coJ/CflJcgQ29ubmVjdGluZyB0byBBcmJpdHJ1bSBjb250cmFjdC4uLicpO1xuICAgICAgdHJ5IHtcbiAgICAgICAgY29uc3QgcHJvdmlkZXIgPSBuZXcgZXRoZXJzLnByb3ZpZGVycy5Kc29uUnBjUHJvdmlkZXIoJ2h0dHBzOi8vYXJiMS5hcmJpdHJ1bS5pby9ycGMnKTtcbiAgICAgICAgY29uc3QgY29udHJhY3RBZGRyZXNzID0gJzB4RThBOWM2ZkZFNmIyMzQ0MTQ3RDg4NkVjQjg2MDhDNUY3ODYzQjIwRCc7XG4gICAgICAgIGNvbnNvbGUubG9nKGDwn5ONIENvbnRyYWN0OiAke2NvbnRyYWN0QWRkcmVzc31gKTtcbiAgICAgICAgY29uc29sZS5sb2coJ/CfjJAgTmV0d29yazogQXJiaXRydW0gT25lJyk7XG4gICAgICAgIGNvbnNvbGUubG9nKCfwn5OLIFJlYWRpbmcgY29udHJhY3QgaW5mby4uLicpO1xuICAgICAgICBcbiAgICAgICAgY29uc3QgYWJpID0gW1xuICAgICAgICAgIFwiZnVuY3Rpb24gbmFtZSgpIHZpZXcgcmV0dXJucyAoc3RyaW5nKVwiLFxuICAgICAgICAgIFwiZnVuY3Rpb24gc3ltYm9sKCkgdmlldyByZXR1cm5zIChzdHJpbmcpXCIsXG4gICAgICAgICAgXCJmdW5jdGlvbiB0b3RhbFN1cHBseSgpIHZpZXcgcmV0dXJucyAodWludDI1NilcIlxuICAgICAgICBdO1xuICAgICAgICBcbiAgICAgICAgY29uc3QgY29udHJhY3QgPSBuZXcgZXRoZXJzLkNvbnRyYWN0KGNvbnRyYWN0QWRkcmVzcywgYWJpLCBwcm92aWRlcik7XG4gICAgICAgIFxuICAgICAgICBjb25zdCBjb250cmFjdE5hbWUgPSBhd2FpdCBjb250cmFjdC5uYW1lKCk7XG4gICAgICAgIGNvbnN0IGNvbnRyYWN0U3ltYm9sID0gYXdhaXQgY29udHJhY3Quc3ltYm9sKCk7XG4gICAgICAgIGNvbnN0IHRvdGFsU3VwcGx5ID0gYXdhaXQgY29udHJhY3QudG90YWxTdXBwbHkoKTtcbiAgICAgICAgXG4gICAgICAgIGNvbnNvbGUubG9nKGDwn5ObIENvbnRyYWN0IE5hbWU6ICR7Y29udHJhY3ROYW1lfWApO1xuICAgICAgICBjb25zb2xlLmxvZyhg8J+OqyBDb250cmFjdCBTeW1ib2w6ICR7Y29udHJhY3RTeW1ib2x9YCk7XG4gICAgICAgIGNvbnNvbGUubG9nKGDwn5OKIFRvdGFsIFN1cHBseTogJHtldGhlcnMudXRpbHMuZm9ybWF0RXRoZXIodG90YWxTdXBwbHkpfWApO1xuICAgICAgICBjb25zb2xlLmxvZygn8J+SoSBSZWFkeSBmb3IgdG9rZW4gbWludGluZyB3aGVuIHdhbGxldCBpcyBjb25uZWN0ZWQnKTtcbiAgICAgICAgXG4gICAgICAgIGNvbnN0IGFyYml0cnVtQ2hlY2sgPSB7XG4gICAgICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgICAgICBjb250cmFjdEFkZHJlc3M6IGNvbnRyYWN0QWRkcmVzcyxcbiAgICAgICAgICBuZXR3b3JrOiAnQXJiaXRydW0gT25lJyxcbiAgICAgICAgICBjb250cmFjdE5hbWU6IGNvbnRyYWN0TmFtZSxcbiAgICAgICAgICBjb250cmFjdFN5bWJvbDogY29udHJhY3RTeW1ib2wsXG4gICAgICAgICAgdG90YWxTdXBwbHk6IGV0aGVycy51dGlscy5mb3JtYXRFdGhlcih0b3RhbFN1cHBseSksXG4gICAgICAgICAgY3VzdG9tZXJQYWlkOiBwYWlkQW1vdW50LFxuICAgICAgICAgIG1zVG9rZW5zVG9NaW50OiBwdXJjaGFzZS5tc1Rva2VucyxcbiAgICAgICAgICBmZWVCcmVha2Rvd246IHtcbiAgICAgICAgICAgIHRva2VuVmFsdWU6IHB1cmNoYXNlLmZlZXMudG9rZW5WYWx1ZSxcbiAgICAgICAgICAgIG1zRmVlOiBwdXJjaGFzZS5mZWVzLm1zRmVlLFxuICAgICAgICAgICAgc3RyaXBlRmVlOiBwdXJjaGFzZS5mZWVzLnN0cmlwZUZlZSxcbiAgICAgICAgICAgIHRvdGFsUGFpZDogcHVyY2hhc2UuZmVlcy50b3RhbEN1c3RvbWVyUGF5cyxcbiAgICAgICAgICAgIHNldHRsZW1lbnRSZXNlcnZlOiBwdXJjaGFzZS5mZWVzLnNldHRsZW1lbnRSZXNlcnZlLFxuICAgICAgICAgICAgcHJpY2luZ01vZGVsOiAnUENCIHJlZ2lvbmFsIGJhbmsgZmVlcyBpbmNsdWRlZCdcbiAgICAgICAgICB9LFxuICAgICAgICAgIHB1cmNoYXNlU291cmNlOiBpc0NvbW1vbnNQdXJjaGFzZSA/ICdUaGUgQ29tbW9ucyBXZWJzaXRlJyA6ICdEaXJlY3QgUHVyY2hhc2UnLFxuICAgICAgICAgIGNvbW11bml0eURhdGE6IGlzQ29tbW9uc1B1cmNoYXNlID8ge1xuICAgICAgICAgICAgbG9jYXRpb246ICdGYXlldHRlIENvdW50eSwgV1YnLFxuICAgICAgICAgICAgcGxhdGZvcm06ICdUaGUgQ29tbW9ucycsXG4gICAgICAgICAgICBjdXN0b21lcldhbGxldDogcGF5bWVudEludGVudC5tZXRhZGF0YT8udXNlcklkLFxuICAgICAgICAgICAgY29tbXVuaXR5Q3VycmVuY3k6IHRydWVcbiAgICAgICAgICB9IDogbnVsbCxcbiAgICAgICAgICBzaGFyZUlkOiBwYXltZW50SW50ZW50Lm1ldGFkYXRhPy5zaGFyZUlkIHx8ICdtb3VudGFpbi1wZWFrLTAwMScsXG4gICAgICAgICAgcGF5bWVudElkOiBwYXltZW50SW50ZW50LmlkLFxuICAgICAgICAgIHJlYWR5Rm9yTWludGluZzogdHJ1ZVxuICAgICAgICB9O1xuICAgICAgICBcbiAgICAgICAgY29uc29sZS5sb2coYPCfj5TvuI8gWyR7bmV3IERhdGUoKS50b0lTT1N0cmluZygpfV0gQXJiaXRydW0gY29udHJhY3QgY2hlY2s6YCwgYXJiaXRydW1DaGVjayk7XG4gICAgICAgIFxuICAgICAgfSBjYXRjaCAoY29udHJhY3RFcnJvcikge1xuICAgICAgICBjb25zb2xlLmVycm9yKGDinYwgWyR7bmV3IERhdGUoKS50b0lTT1N0cmluZygpfV0gQXJiaXRydW0gY29udHJhY3QgZXJyb3I6YCwgY29udHJhY3RFcnJvci5tZXNzYWdlKTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgY29uc29sZS5sb2coYOKchSBbJHtuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCl9XSBQYXltZW50IHByb2Nlc3NpbmcgY29tcGxldGVkYCk7XG4gICAgICBicmVhaztcbiAgICAgIFxuICAgIGRlZmF1bHQ6XG4gICAgICBjb25zb2xlLmxvZyhg8J+ktyBbJHtuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCl9XSBVbmhhbmRsZWQgZXZlbnQgdHlwZTogJHtldmVudC50eXBlfWApO1xuICB9XG5cbiAgcmVzLnN0YXR1cygyMDApLmpzb24oeyByZWNlaXZlZDogdHJ1ZSB9KTtcbn1cbiJdLCJuYW1lcyI6WyJidWZmZXIiLCJTdHJpcGUiLCJldGhlcnMiLCJzdHJpcGUiLCJwcm9jZXNzIiwiZW52IiwiU1RSSVBFX1NFQ1JFVF9LRVkiLCJhcGlWZXJzaW9uIiwiY29uZmlnIiwiYXBpIiwiYm9keVBhcnNlciIsImNhbGN1bGF0ZU1vdW50YWluU2hhcmVzRmVlcyIsIm1zVG9rZW5zRGVzaXJlZCIsInRva2VuVmFsdWUiLCJtc0ZlZVJhdyIsIm1zRmVlIiwiTWF0aCIsImNlaWwiLCJzdHJpcGVGZWVCYXNlIiwiYWRkaXRpb25hbFByb2Nlc3NpbmdGZWUiLCJzdHJpcGVGZWVUb3RhbCIsInN0cmlwZUZlZSIsInRvdGFsQ3VzdG9tZXJQYXlzIiwibXNUb2tlbnNSZWNlaXZlZCIsInNldHRsZW1lbnRSZXNlcnZlIiwiY2FsY3VsYXRlTVNGcm9tUGF5bWVudCIsInBheW1lbnRBbW91bnQiLCJtc1Rva2VucyIsImZlZXMiLCJhYnMiLCJlc3RpbWF0ZWRNUyIsImZsb29yIiwiaGFuZGxlciIsInJlcSIsInJlcyIsIm1ldGhvZCIsInNldEhlYWRlciIsInN0YXR1cyIsImVuZCIsImJ1ZiIsInNpZyIsImhlYWRlcnMiLCJldmVudCIsIndlYmhvb2tzIiwiY29uc3RydWN0RXZlbnQiLCJTVFJJUEVfV0VCSE9PS19TRUNSRVQiLCJlcnIiLCJjb25zb2xlIiwiZXJyb3IiLCJEYXRlIiwidG9JU09TdHJpbmciLCJtZXNzYWdlIiwic2VuZCIsImxvZyIsInR5cGUiLCJpZCIsInBheW1lbnRJbnRlbnQiLCJkYXRhIiwib2JqZWN0IiwicGFpZEFtb3VudCIsImFtb3VudCIsImlzQ29tbW9uc1B1cmNoYXNlIiwibWV0YWRhdGEiLCJzaGFyZUlkIiwiaW5jbHVkZXMiLCJ0b0ZpeGVkIiwicHVyY2hhc2UiLCJ1c2VySWQiLCJwcm92aWRlciIsInByb3ZpZGVycyIsIkpzb25ScGNQcm92aWRlciIsImNvbnRyYWN0QWRkcmVzcyIsImFiaSIsImNvbnRyYWN0IiwiQ29udHJhY3QiLCJjb250cmFjdE5hbWUiLCJuYW1lIiwiY29udHJhY3RTeW1ib2wiLCJzeW1ib2wiLCJ0b3RhbFN1cHBseSIsInV0aWxzIiwiZm9ybWF0RXRoZXIiLCJhcmJpdHJ1bUNoZWNrIiwic3VjY2VzcyIsIm5ldHdvcmsiLCJjdXN0b21lclBhaWQiLCJtc1Rva2Vuc1RvTWludCIsImZlZUJyZWFrZG93biIsInRvdGFsUGFpZCIsInByaWNpbmdNb2RlbCIsInB1cmNoYXNlU291cmNlIiwiY29tbXVuaXR5RGF0YSIsImxvY2F0aW9uIiwicGxhdGZvcm0iLCJjdXN0b21lcldhbGxldCIsImNvbW11bml0eUN1cnJlbmN5IiwicGF5bWVudElkIiwicmVhZHlGb3JNaW50aW5nIiwiY29udHJhY3RFcnJvciIsImpzb24iLCJyZWNlaXZlZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./pages/api/webhooks/stripe.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fwebhooks%2Fstripe&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fwebhooks%2Fstripe.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();